{
    "catalogue": [
       { "id": 1, "title": "From Weeks to Hours: A Modern Approach to Client Onboarding", "industry": "Financial Services & Banking", "technology": "Copilot Studio & Power Automate", "miniDescription": "Automate the entire client onboarding journey, from document collection and KYC/AML checks to final approval, reducing friction and compliance risk.", "technicalLevel": 7, "problem": "Meet Stefan, a compliance officer at a private bank. His daily quest involves deciphering handwritten forms, chasing clients for missing documents, and manually cross-referencing names against sanctions lists. The process for a single client can take weeks. A simple typo could lead to a failed audit, and a delayed onboarding could mean a lost client. Stefan needs more than just automation; he needs an intelligent system that handles the repetitive work so he can focus on genuine risk analysis.", "value": "In the high-stakes world of financial services, the client onboarding process is the first, most critical handshake. Yet, for many institutions, it's a journey fraught with mountains of paperwork, treacherous compliance checks (KYC/AML), and the constant risk of manual errors. This friction not only creates a poor first impression but also opens the door to significant compliance risk. This solution automates the grind, delights new clients, and creates a robust, auditable compliance process.", "roi": "The business case for this hybrid solution is exceptionally strong.\nA = Average time to manually onboard one client (in hours).\nB = Number of new clients onboarded per month.\nC = Average fully-loaded hourly cost of a compliance/operations employee.\n\n<code>Formula:\nMonthly Hours Saved = (A * B)\nMonthly Cost Savings = Monthly Hours Saved * C</code>\n\nExample: If manual onboarding takes 8 hours (A), you onboard 50 clients a month (B), and your staff cost is €60/hour (C), you save **400 hours** and **€24,000 every single month**. This ROI doesn't even factor in the immense value of reduced compliance risk and faster time-to-revenue.", "implementationGuide": "<h5 class=\"font-bold text-lg mt-4 mb-2\">The Solution Blueprint: A Hybrid Approach</h5><p class=\"mb-4 text-gray-600\">This use case is a perfect example of where a thoughtful, hybrid architecture provides the most value. The core client-facing process requires a structured, guided conversation to ensure every piece of mandatory compliance data is captured in the correct order. We cannot risk a client missing a step. Therefore, a traditional <strong>Topic</strong> is the ideal choice for the user-facing interaction. However, the backend processing—the \"heavy lifting\"—will be built as an intelligent, reusable <strong>Generative Action plugin</strong>, making our solution both robust and scalable.</p><h5 class=\"font-bold text-lg mt-4 mb-2\">Step-by-Step Implementation Guide</h5><ol class=\"list-decimal list-inside space-y-3 text-gray-600\"><li><strong>Prepare Your Foundation (Dataverse):</strong> For an enterprise-grade solution, Microsoft Dataverse is the ideal foundation. Create a table named \"Onboarding Case\" with columns for Client Name, Email, DOB, KYC Status, AML Check Result, and a file column for the ID document.</li><li><strong>Build the Guided Conversation (The Topic):</strong> In Copilot Studio, create a new Topic called \"Onboard as a New Client.\" Use a series of <strong>Question</strong> nodes to reliably capture the required data (Full Name, Email, etc.) and use the <strong>File Upload</strong> question node to ask for their passport or ID card. At the end, add an <strong>Action</strong> node to call the plugin.</li><li><strong>Create the Intelligent Engine (The Generative Action Plugin):</strong> In Copilot Studio, create a new plugin using a Power Automate flow. <ul class=\"list-disc list-inside ml-4 mt-2 space-y-1\"><li><strong>Plugin Name:</strong> Submit New Client Application for KYC Review</li><li><strong>Description for AI:</strong> \"Use this to process a new client application. It takes the client's name, email, and ID document file, runs AI data extraction and AML checks, and submits for compliance approval.\"</li><li><strong>Inputs:</strong> Define inputs for ClientName (text), ClientEmail (text), and IDDocument (file).</li><li><strong>Flow Logic:</strong> Use AI Builder to extract info from the ID. Call a third-party API for AML screening. Post an adaptive card in Teams for approval. Use conditional logic based on the approval to update Dataverse and notify stakeholders.</li></ul></li><li><strong>Connect, Test, and Publish:</strong> Go back to your Topic and connect the final Action node to your new plugin, mapping the variables. Test rigorously before publishing.</li></ol><h5 class=\"font-bold text-lg mt-6 mb-2\">Beyond the Basics (Pro-Tip)</h5><p class=\"text-gray-600\">Now that you've built your core onboarding engine as a plugin, you can create companion plugins for your internal teams. Create a new, purely generative action plugin called \"Check Onboarding Status.\" The Power Automate flow simply queries your \"Onboarding Case\" table in Dataverse and returns the status. Now, a relationship manager can simply ask the Copilot, \"What's the status of the John Smith application?\" and get an instant answer.</p>" },
       { "id": 2, "title": "Slay the Mortgage Paperwork Dragon: From Application to Underwriting in Hours", "industry": "Financial Services & Banking", "technology": "Copilot Studio & Power Automate", "miniDescription": "Tame the chaos of mortgage applications by using AI to automatically extract data from documents like payslips and bank statements.", "technicalLevel": 8, "problem": "Meet Laura, a dedicated loan officer. Her monitor is swamped with dozens of PDF attachments from a single applicant. She spends hours squinting at scanned bank statements, manually typing income figures into the LOS, and sending polite-but-firm emails chasing down a missing document. Each application is a multi-day administrative marathon before she can even begin the real work of loan assessment. It’s inefficient for the bank and a stressful waiting game for the homebuyer.", "value": "For most people, applying for a mortgage is a daunting quest, second only to fighting an actual dragon. For the loan officers on the other side, it's a battle against a multi-headed hydra of paperwork: payslips, bank statements, and ID documents, all needing to be manually reviewed and keyed into a Loan Origination System (LOS). This process is slow, tedious, and ripe for errors that can delay approvals and frustrate customers. This solution tames the chaos, automates the data entry, and gets applications to your underwriting team in record time.", "roi": "Let's calculate the value of automating this document-heavy process.\nA = Average time a loan officer spends manually processing documents and keying data for one application (in hours).\nB = Number of mortgage applications per month.\nC = Average fully-loaded hourly cost of a loan officer.\n\n<code>Formula:\nMonthly Hours Saved = (A * B)\nMonthly Cost Savings = Monthly Hours Saved * C</code>\n\nExample: If manual processing takes 3 hours per application (A), you receive 200 applications a month (B), and your loan officer cost is €55/hour (C), you save **600 hours** and **€33,000 per month**, while freeing up your team to handle more applications and provide better customer service.", "implementationGuide": "<h5 class=\"font-bold text-lg mt-4 mb-2\">The Solution Blueprint: A Hybrid Approach</h5><p class=\"mb-4 text-gray-600\">This use case is a prime candidate for a hybrid architecture, combining a guided conversation with intelligent backend processing. A mortgage application is a highly structured, compliance-driven process. We need to ensure every required document and data point is collected in a specific order, making a guided <strong>Topic</strong> the perfect choice for the applicant-facing interaction. The real magic, however, happens in the background. We will build the document analysis and data entry logic as a powerful, reusable <strong>Power Automate plugin</strong>, which the Topic will call upon to do the heavy lifting.</p><h5 class=\"font-bold text-lg mt-4 mb-2\">Step-by-Step Implementation Guide</h5><ol class=\"list-decimal list-inside space-y-3 text-gray-600\"><li><strong>Prepare Your Foundation (AI Builder & Dataverse):</strong> Train a custom <strong>AI Builder Document Processing</strong> model on examples of payslips. For bank statements, you can often start with the pre-built invoice processing model. Create a Dataverse table to track the application status.</li><li><strong>Build the Guided Conversation (The Topic):</strong> In Copilot Studio, create a Topic called \"Start a New Mortgage Application.\" Use a series of <strong>File Upload</strong> nodes to request each document individually. This is better than asking for all at once, as it allows you to provide clear instructions for each one.</li><li><strong>Create the Intelligent Engine (The Power Automate Plugin):</strong> In Power Automate, create a flow with the \"Run from Copilot\" trigger and configure it as a plugin. <ul class=\"list-disc list-inside ml-4 mt-2 space-y-1\"><li><strong>Plugin Name:</strong> Analyze and Stage Mortgage Application</li><li><strong>Description for AI:</strong> \"Processes uploaded mortgage documents. It uses AI to extract data from payslips and bank statements, then creates a pre-filled application in the main loan system.\"</li><li><strong>Inputs:</strong> Define file inputs for PayslipFile, BankStatementFile, IDFile, etc.</li><li><strong>Flow Logic:</strong> For each file input, add the corresponding AI Builder \"Extract information from...\" action. Use an HTTP action (premium) to make an API call to your Loan Origination System, populating it with the extracted data.</li></ul></li><li><strong>Connect, Test, and Publish:</strong> Link your Topic's Action node to this new plugin, mapping the uploaded file variables to the plugin's inputs. Conduct thorough end-to-end testing with various document types to ensure your AI models are accurate before publishing.</li></ol><h5 class=\"font-bold text-lg mt-6 mb-2\">Beyond the Basics (Pro-Tip)</h5><p class=\"text-gray-600\">Empower your internal teams with a companion generative action. Create a new, simple plugin for loan officers called \"Get Applicant Summary.\" The flow takes the applicant's name as input, queries the LOS for the relevant data, and returns a concise summary. Now, Laura can just type into her Teams Copilot, \"Get me a summary for the Jane Doe application,\" and get the key numbers instantly without even opening the LOS.</p>" },
       { "id": 3, "title": "Reinventing Insurance Claims: The 24/7 AI-Powered FNOL Assistant", "industry": "Insurance", "technology": "Copilot Studio & Power Automate", "miniDescription": "Create an instant, empathetic, and available 24/7 First Notice of Loss (FNOL) process that delights customers in their moment of need.", "technicalLevel": 5, "problem": "Meet Maria. She's just been in a minor fender-bender. She's shaken but okay. The last thing she wants to do is wait on hold for 30 minutes, repeating her story to multiple people. She just wants to report the incident, know what to do next, and feel like her insurance company has her back. The traditional process feels like an obstacle course; Maria needs a direct path to resolution.", "value": "The First Notice of Loss (FNOL) is the \"moment of truth\" in the insurance world. It's the very first interaction a customer has after a stressful event like a car accident or a flooded basement. A slow, clunky, or impersonal experience at this stage can shatter customer trust forever. For insurers, call centers get overwhelmed during major events, and manual data entry is slow and inconsistent. This solution creates an FNOL process that is instant, empathetic, and available 24/7.", "roi": "The value here is measured in cost savings, efficiency, and customer loyalty.\nA = Average time an agent spends on one FNOL call (in minutes).\nB = Number of claims per month.\nC = Fully-loaded cost per agent per hour.\nD = Estimated reduction in claims leakage due to faster, more accurate initial data capture (as a %).\n\n<code>Formula:\nMonthly Agent Savings = ((A * B) / 60) * C\nValue of Reduced Leakage = (Total Claims Value * D)</code>\n\nExample: If an agent spends 20 minutes per claim (A), you have 5,000 claims a month (B), and an agent costs €45/hour (C), you save over **1,666 hours** and **€75,000 per month** in agent costs alone, plus the immense value of improved customer retention.", "implementationGuide": "<h5 class=\"font-bold text-lg mt-4 mb-2\">The Solution Blueprint: A Generative Action-First Approach</h5><p class=\"mb-4 text-gray-600\">This use case is a textbook example of where a pure Generative Action approach shines. A person reporting a claim is not going to use precise, pre-defined phrases. They are going to tell a story. The core requirement is for the AI to understand the user's natural language, extract the key details, and initiate the correct process. A rigid, scripted Topic would feel cold and would likely fail.</p><h5 class=\"font-bold text-lg mt-4 mb-2\">Step-by-Step Implementation Guide</h5><ol class=\"list-decimal list-inside space-y-3 text-gray-600\"><li><strong>Prepare Your Foundation (Claims System & Storage):</strong> Ensure your core claims system can be accessed via an API. Set up Azure Blob Storage to securely receive and store photos of the damage.</li><li><strong>Build the Intelligent Engine (The Power Automate Plugin):</strong> The name and description are what the AI uses to find and operate your tool. <ul class=\"list-disc list-inside ml-4 mt-2 space-y-1\"><li><strong>Plugin Name:</strong> Initiate New Insurance Claim</li><li><strong>Description for AI:</strong> \"Use this to start a new insurance claim for a policyholder. You will need their policy number and a description of what happened. You can also accept photos of the damage if the user provides them.\"</li><li><strong>Inputs:</strong> Define inputs for PolicyNumber (text), IncidentDescription (text), and DamagePhotos (file, optional).</li><li><strong>Flow Logic:</strong> Call your claims system's API to create the claim record. If photos are provided, save them to Azure Blob Storage. Send a confirmation to the customer with their new Claim ID.</li></ul></li><li><strong>Enable the Plugin in Copilot Studio:</strong> Navigate to the Plugins section, find your new plugin, and simply switch it on. Ensure \"Generative Answers\" is enabled. The Copilot is now equipped with a \"claim filing\" skill.</li></ol><h5 class=\"font-bold text-lg mt-6 mb-2\">Beyond the Basics (Pro-Tip)</h5><p class=\"text-gray-600\">Supercharge your plugin with empathy. Add an AI Builder \"Analyze sentiment\" action to your Power Automate flow. If the sentiment is strongly negative, the flow can automatically flag the claim as \"High Priority / Empathy Required\" and notify a senior manager, ensuring your most distressed customers get white-glove service immediately.</p>" }
    ]
}