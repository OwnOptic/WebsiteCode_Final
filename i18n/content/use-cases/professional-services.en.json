
{
    "catalogue": [
        {
            "id": 35,
            "title": "From 'Closed-Won' to Kickoff in Minutes: Automating Project Setup",
            "industry": "Professional Services",
            "technology": "Power Automate",
            "miniDescription": "Seamlessly transition a deal from 'Closed-Won' in your CRM to a fully provisioned, ready-to-start project in minutes.",
            "technicalLevel": 8,
            "problem": "A sales director, Maria, marks a major consulting deal as 'Closed-Won' in the CRM system (e.g., Salesforce). This should be great news, but now the work begins. She has to email the project management office (PMO) with the details. A project manager then has to manually create a new project in the finance system, create a new Team in Microsoft Teams for collaboration, set up a new project in Planner, and then manually invite the correct team members to all three systems. The process takes half a day and is prone to typos.",
            "value": "In any professional services firm—be it a consulting group, a law firm, or a marketing agency—the moment a deal is won should be a moment of celebration. Instead, it often triggers a frantic, manual scramble. A project manager has to chase the sales team for details, then manually create a new project in the finance system, set up a workspace in Teams, and add the right people to the project management tool. This administrative friction delays the project kickoff and creates opportunities for data entry errors that can impact billing down the line. This guide will show you how to build an automated engine that seamlessly transitions a deal from 'Closed-Won' to a fully provisioned, ready-to-start project in minutes.",
            "roi": "The return is measured in accelerated project starts, improved data consistency, and reclaimed administrative time.\nA = Hours saved per project on manual setup across all staff involved (Sales, PMO, Finance).\nB = Number of new projects per year.\nC = The strategic value of starting billable work faster and eliminating billing errors caused by incorrect project setup.\n\n<code>Formula:\nAnnual Savings = (A * B * Staff Hourly Cost) + (Value of Faster Billing, C)</code>\n\nExample: If you save 2 hours of manual work per project (A) and you start 300 projects a year (B), you save 600 hours of high-value employee time. The strategic value (C) of being able to start projects and bill for work a day earlier can have a significant positive impact on cash flow.",
            "implementationGuide": "<h5>The Solution Blueprint: A Backend Engine Triggered by Sales</h5><p>This is a pure process automation workflow triggered by a data event: a sales opportunity's status changing to 'Closed-Won' in the CRM. The goal is to orchestrate a series of backend actions across multiple systems without any conversational input.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Prepare Your Foundation (CRM, Templates, and APIs):</strong> Your CRM opportunity record must be the single source of truth, containing all the necessary data, including a list of the core team members who will be assigned to the project.</li><li><strong>Build the Provisioning Engine (The Power Automate Flow):</strong> Create an Automated cloud flow with the trigger for your CRM (e.g., Dataverse 'When a row is modified'). The flow should read data from the CRM, create a project in the finance system via API, create a new Microsoft Team, create a Planner plan, and add the assigned team members to both.</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Create a standardized project structure automatically. Instead of just creating a blank Team and Planner plan, have the flow also create standard channels (e.g., 01_Client_Comms, 02_Internal_Working) and Planner buckets (e.g., Phase 1 - Discovery, Phase 2 - Development) to ensure every project starts with a best-practice structure.</p>"
        },
        {
            "id": 36,
            "title": "The Digital Gatekeeper: Automating Client Conflict Checks",
            "industry": "Professional Services",
            "technology": "Power Automate",
            "miniDescription": "Automate and standardize the critical client conflict check process, providing speed, certainty, and mitigating catastrophic risk.",
            "technicalLevel": 9,
            "problem": "A partner at a law firm, David, is about to engage a new client for a major litigation case. Before he can proceed, he must perform a conflict check. He emails the firm's compliance officer, who then has to manually search their client database, billing system, and historical case files for any mention of the opposing parties in the new case. The process takes days, delaying the engagement and creating anxiety that a subtle, historical conflict might be missed.",
            "value": "For law firms, consulting groups, and accounting firms, the client conflict check is an absolute, non-negotiable step before taking on any new business. A failure to identify a conflict of interest can lead to serious ethical breaches, legal challenges, and catastrophic reputational damage. The traditional process, relying on manual searches across multiple systems and the institutional memory of senior partners, is slow and fraught with risk. This guide will show you how to build a digital gatekeeper that automates and standardizes the conflict check process, providing speed and certainty.",
            "roi": "The ROI for this use case is measured almost entirely in risk mitigation.\nA = Hours saved per conflict check on manual searching.\nB = The immense, unquantifiable value of avoiding a single major conflict of interest, which can result in disqualification from a case, disgorgement of fees, and severe reputational damage.\nC = The value of being able to engage with new clients faster.\n\n<code>Formula:\nValue Proposition = Catastrophic Risk Avoidance (B) + Faster Engagement (C) + Operational Savings (A)</code>\n\nExample: While saving 4-5 hours of manual work per check is a great efficiency gain, the real value is B. A single, missed conflict on a multi-million euro case could cost the firm the entire fee and damage its reputation for years. This automated system is an insurance policy against that catastrophic outcome.",
            "implementationGuide": "<h5>The Solution Blueprint: A Hybrid Approach</h5><p>A conflict check request must be formal and precise. A simple Power App provides the ideal, structured interface to capture this critical data. The backend search across multiple, often disparate, systems is a complex orchestration that is a perfect job for a powerful Power Automate flow.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Prepare Your Foundation (Data Sources & APIs):</strong> You need read-only API access to all relevant systems (CRM, Finance, Document Management).</li><li><strong>Build the Request Interface (The Power App):</strong> Create a simple canvas app with a form for the prospective client and all other involved parties. A 'Submit Check' button will trigger your flow.</li><li><strong>Create the Search Engine (The Power Automate Flow):</strong> Use the 'PowerApps (V2)' trigger. Use a Parallel branch to search all systems at once (CRM, Finance API, SharePoint content search). Compile all 'hits' into a single report and post it as an adaptive card to the compliance officer for human review.</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Create a 'relationship graph' for advanced analysis. For each potential conflict found, the flow can not only report the 'hit' but also query the source systems for related entities (e.g., board members of a conflicting company). This provides a much deeper level of insight for the human reviewer.</p>"
        },
        {
            "id": 37,
            "title": "The Instant Auditor: An AI-Powered Bot for Time and Expense Policies",
            "industry": "Professional Services",
            "technology": "Copilot Studio",
            "miniDescription": "Build an AI-powered Copilot that provides immediate, accurate, and consistent answers to all employee questions about time and expense policies.",
            "technicalLevel": 2,
            "problem": "A consultant, Sarah, is about to submit her weekly expense report. She's unsure if she can claim for the Wi-Fi she purchased on her flight. She spends five minutes searching the company's intranet for the travel policy, can't find a clear answer, and ends up emailing the finance helpdesk. A finance clerk then has to find the relevant policy section and email it back to her. This simple query has disrupted two people's work and delayed Sarah's expense submission.",
            "value": "In any professional services firm, time and expenses are the lifeblood of the business. They are also a source of endless questions from employees. 'What is the per diem for travel to Berlin?', 'Can I expense a flight upgrade?', 'Do I need a receipt for a taxi under €25?' Answering these repetitive questions is a major time sink for your busy finance and HR teams. This guide will show you how to build an 'Instant Auditor,' an AI-powered Copilot that provides immediate, accurate, and consistent answers to all policy questions, 24/7.",
            "roi": "The return is measured in reclaimed productivity across the entire firm.\nA = Number of policy-related questions deflected from the finance/HR helpdesk per month.\nB = Time saved per employee who can now self-serve instead of searching or asking a colleague.\nC = The value of improved compliance and reduced numbers of incorrectly filed expense reports or timesheets.\n\n<code>Formula:\nValue Proposition = (Helpdesk Savings, A) + (Employee Productivity Gain, B) + Improved Compliance (C)</code>\n\nExample: If you deflect 300 queries a month from your finance team (A), you save dozens of hours of their time. The larger impact is B: if each of your 1,000 employees saves just 10 minutes a month, that's over 160 hours of reclaimed productive time every month. The value of C, ensuring policies are followed correctly the first time, reduces costly rework and improves financial data quality.",
            "implementationGuide": "<h5>The Solution Blueprint: A Pure Generative Action Approach</h5><p>Employee questions about expenses are conversational, specific, and virtually infinite in their variety. The core task is for the AI to understand the employee's natural language question and find the precise answer within the firm's official, trusted policy documents. This is the perfect job for Generative Answers.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Prepare Your Foundation (The Policy Hub):</strong> Create a dedicated, secure SharePoint Online site to house all official policy documents. Ensure all policies are up-to-date and stored here in a modern, text-readable format.</li><li><strong>Build the AI Brain (Configure Generative Answers):</strong> In Copilot Studio, create a new Copilot. In the Generative AI section, enter the URL of the SharePoint policy library. Set content moderation to 'High'.</li><li><strong>Test and Deploy:</strong> Thoroughly test the Copilot with your finance and HR teams. Once confident, deploy it to all employees via Microsoft Teams.</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Move from answering questions to automating actions. Create a simple Generative Action plugin called Get Expense Report Status. The flow takes the employee's ID, calls the finance system's API, and returns the status. Now, when an employee asks, 'Did my expense report from last week get approved yet?', the Copilot can provide a direct, real-time answer.</p>"
        },
        {
            "id": 53,
            "title": "Consultant Onboarding & Offboarding",
            "industry": "Professional Services",
            "technology": "Power Automate",
            "miniDescription": "Automate the full lifecycle of external consultants, from access provisioning to secure and timely offboarding.",
            "technicalLevel": 7,
            "problem": "A new consultant, Maria, joins a major project. The project manager (PM) emails IT to get her an account, then emails another team to get her access to the client's SharePoint site. The process takes two days. When her contract ends three months later, the PM forgets to notify IT, and her account remains active for two weeks, creating a significant security risk.",
            "value": "Professional services firms rely heavily on external consultants and contractors. Managing their lifecycle—granting them access to the right client materials and systems when they start, and ensuring that access is immediately revoked when the project ends—is a critical security and operational challenge.",
            "roi": "The ROI is primarily about security and agility.\n\n<code>Formula:\nValue = (Cost of a Security Breach Averted) + (Value of Faster Consultant Start Times)</code>\n\nExample: The primary ROI is security and risk mitigation. It eliminates the risk of ex-consultants retaining access to sensitive client data. It also dramatically speeds up the onboarding process, making the firm more agile and responsive. It provides a perfect audit trail for client security reviews.",
            "implementationGuide": "<h5>The Solution Blueprint: Two Lifecycle Flows</h5><p>This solution uses two Power Automate flows to manage the start and end of the consultant lifecycle.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Set up a Data Source:</strong> Use a SharePoint list or Dataverse table to store consultant information, including their Contract End Date.</li><li><strong>Build the Onboarding Flow:</strong> Trigger from a Power App. Use the Start and wait for an approval action. Use the Azure AD connector's Create user action (configured for guest users). Use the Teams Add a member to a team action.</li><li><strong>Build the Offboarding Flow:</strong> Create a Scheduled cloud flow. Use a Get items action with a filter query to find all consultants where Contract End Date equals today's date. Loop through the results and use the Azure AD Update user action to disable the account (Account enabled = No).</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Integrate with time-tracking. Before disabling the account, the offboarding flow could first make an API call to the firm's time-tracking system to check if the consultant has any unsubmitted timesheets. If they do, the flow can use an AI Builder prompt to generate a concise reminder and send it to the consultant and the PM, ensuring all billable hours are captured before the engagement ends.</p>"
        },
        {
            "id": 54,
            "title": "Project Setup Automation",
            "industry": "Professional Services",
            "technology": "Power Automate",
            "miniDescription": "Automate the creation of a standard, best-practice project environment in Microsoft Teams and SharePoint for every new client engagement.",
            "technicalLevel": 6,
            "problem": "A partner signs a new client engagement. They ask their executive assistant to 'set up the project.' The assistant spends an hour creating a new Team, adding the core project members, creating a standard folder structure in the SharePoint site, and copying over a budget template from a previous project.",
            "value": "Every new client project in a professional services firm requires a standard set of resources: a dedicated Teams channel for collaboration, a SharePoint site for document management, a budget tracking spreadsheet, and more. Manually creating these resources for every project is repetitive and leads to inconsistent structures.",
            "roi": "The ROI is measured in efficiency and consistency.\n\n<code>Formula:\nAnnual Savings = (Hours Saved per Project * Projects per Year * Staff Hourly Cost)</code>\n\nExample: Saves dozens of hours of administrative work per month. Enforces consistency across all projects, making it easier for consultants to move between projects and find information. Ensures best practices for project setup are followed every time.",
            "implementationGuide": "<h5>The Solution Blueprint: A Provisioning Workflow</h5><p>This is a provisioning workflow that creates a consistent project environment every time.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Create Templates:</strong> Design your ideal project folder structure and create a standard Excel budget template file. Store these in a central template library.</li><li><strong>Build the Flow:</strong> Trigger the flow from your Power App. Use the Create a team action from the Teams connector. Loop through the list of team members and use the Add a member to a team action. Use the SharePoint Copy file action to copy your budget template into the newly created Team's document library. Use Send an HTTP request to SharePoint actions to apply your standard folder structure using the PnP (Patterns and Practices) site templating engine.</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Integrate with your CRM. Trigger the flow automatically when a sales opportunity in your CRM (e.g., Dynamics 365 Sales) is marked as 'Won.' The flow can pull the client name, project value, and assigned team directly from the CRM, meaning the project environment is created instantly without any manual data entry.</p>"
        },
        {
            "id": 55,
            "title": "Client Conflict Check",
            "industry": "Professional Services",
            "technology": "Power Automate",
            "miniDescription": "Automate and standardize the critical client conflict check process, providing speed, certainty, and mitigating catastrophic risk.",
            "technicalLevel": 9,
            "problem": "A partner wants to engage a new client, 'Innovate Corp.' An associate is tasked with the conflict check. They have to manually search the firm's CRM for 'Innovate Corp,' but also for its executives, its parent company, and its subsidiaries. They then have to search past matters to see if the firm has ever taken an adverse position. The process is slow and relies on the associate's diligence to be effective.",
            "value": "Before a law firm, consulting firm, or accounting firm can take on a new client, they have a legal and ethical obligation to perform a conflict check to ensure the new engagement doesn't create a conflict of interest with any existing or past clients. This is a critical risk management process that is often manual and time-consuming.",
            "roi": "The ROI is measured almost entirely in risk mitigation.\n\n<code>Formula:\nValue Proposition = Catastrophic Risk Avoidance + Faster Engagement + Operational Savings</code>\n\nExample: While saving 4-5 hours of manual work per check is a great efficiency gain, the real value is avoiding a single, missed conflict on a multi-million euro case, which could cost the firm the entire fee and damage its reputation for years. This automated system is an insurance policy against that catastrophic outcome.",
            "implementationGuide": "<h5>The Solution Blueprint: A Hybrid Approach</h5><p>A conflict check request must be formal and precise. A simple Power App provides the ideal, structured interface to capture this critical data. The backend search across multiple, often disparate, systems is a complex orchestration that is a perfect job for a powerful Power Automate flow.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Prepare Your Foundation (Data Sources & APIs):</strong> You need read-only API access to all relevant systems (CRM, Finance, Document Management).</li><li><strong>Build the Request Interface (The Power App):</strong> Create a simple canvas app with a form for the prospective client and all other involved parties. A 'Submit Check' button will trigger your flow.</li><li><strong>Create the Search Engine (The Power Automate Flow):</strong> Use the 'PowerApps (V2)' trigger. Use a Parallel branch to search all systems at once (CRM, Finance API, SharePoint content search). Compile all 'hits' into a single report and post it as an adaptive card to the compliance officer for human review.</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Use fuzzy matching. Instead of exact name searches, use an AI Builder prompt in your flow. The prompt can take the input names and generate a list of potential variations (e.g., 'Innovate Corp' -> 'Innovate Corporation,' 'Innovate Inc.'). The flow then searches for all of these variations, increasing the likelihood of finding a subtle conflict.</p>",
            "interactiveComponent": "ConflictCheckDemo"
        },
        {
            "id": 56,
            "title": "Time & Expense Policy Query Bot",
            "industry": "Professional Services",
            "technology": "Copilot Studio",
            "miniDescription": "Build an AI-powered Copilot that provides immediate, accurate, and consistent answers to all employee questions about time and expense policies.",
            "technicalLevel": 2,
            "problem": "A consultant, Sarah, is about to submit her weekly expense report. She is unsure if she can claim for the Wi-Fi she purchased on her flight. She spends five minutes searching the company's intranet for the travel policy document, and then calls her assistant to double-check, consuming time for both of them.",
            "value": "Consultants and lawyers are constantly traveling and incurring expenses. They frequently have questions about the firm's policies: 'What is the per diem for meals in London?' 'Do I need a receipt for a taxi under $50?' Answering these questions manually falls to administrative assistants or the finance department. This solution provides an instant, self-service answer.",
            "roi": "The return is measured in reclaimed productivity across the entire firm.\n\n<code>Formula:\nValue Proposition = (Helpdesk Savings) + (Employee Productivity Gain) + Improved Compliance</code>\n\nExample: If you deflect 300 queries a month from your finance team, you save dozens of hours of their time. The larger impact is that if each of your 1,000 employees saves just 10 minutes a month, that's over 160 hours of reclaimed productive time every month. Ensuring policies are followed correctly the first time reduces costly rework.",
            "implementationGuide": "<h5>The Solution Blueprint: A Pure Generative Action Approach</h5><p>Employee questions about expenses are conversational, specific, and virtually infinite in their variety. The core task is for the AI to understand the employee's natural language question and find the precise answer within the firm's official, trusted policy documents. This is the perfect job for Generative Answers.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Prepare Your Foundation (The Policy Hub):</strong> Create a dedicated, secure SharePoint Online site to house all official policy documents. Ensure all policies are up-to-date and stored here in a modern, text-readable format.</li><li><strong>Build the AI Brain (Configure Generative Answers):</strong> In Copilot Studio, create a new Copilot. In the Generative AI section, enter the URL of the SharePoint policy library. Set content moderation to 'High'.</li><li><strong>Test and Deploy:</strong> Thoroughly test the Copilot with your finance and HR teams. Once confident, deploy it to all employees via Microsoft Teams.</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Move from answering questions to automating actions. Create a simple Generative Action plugin called Get Expense Report Status. The flow takes the employee's ID, calls the finance system's API, and returns the status. Now, when an employee asks, 'Did my expense report from last week get approved yet?', the Copilot can provide a direct, real-time answer.</p>"
        }
    ]
}
