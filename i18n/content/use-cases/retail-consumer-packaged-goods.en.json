
{
    "catalogue": [
        {
            "id": 22,
            "title": "The #1 Call Killer: How to Automate Order Status (WISMO) Inquiries",
            "industry": "Retail & Consumer Packaged Goods",
            "technology": "Copilot Studio & Power Automate",
            "miniDescription": "Build an AI assistant that answers the most common customer question—'Where Is My Order?'—instantly, 24/7.",
            "technicalLevel": 4,
            "problem": "A customer, David, placed an order three days ago. He's excited for it to arrive. He goes to the retailer's website, can't find a tracking link easily, and so he opens a live chat. He waits in a queue for five minutes, only to ask an agent a question that could have been answered by a simple database lookup. The experience is mediocre for David, and for the agent, it's the 50th identical query they've handled that day.",
            "value": "In the world of e-commerce, one question reigns supreme, echoing through every contact center and social media channel: \"Where Is My Order?\" This single query, known as WISMO, is responsible for a massive percentage of all customer interactions. It's a low-value, repetitive task that ties up your agents and prevents them from handling complex issues. This guide will show you how to build a simple but incredibly powerful AI assistant that answers this question instantly, 24/7, delighting your customers and freeing your service team.",
            "roi": "The return on investment for a WISMO bot is massive, direct, and easy to calculate.\nA = Percentage of contact center queries that are WISMO-related (often 40-60%).\nB = Total monthly contact center query volume.\nC = Average cost to handle one live agent interaction (chat or call).\n\n<code>Formula:\nMonthly Savings = (A * B) * C</code>\n\nExample: If 50% of your queries are WISMO (A), you handle 20,000 queries a month (B), and your cost per interaction is €5 (C), you save **€50,000 every single month**. This is one of the highest and fastest ROI projects in the entire automation landscape.",
            "implementationGuide": "<h5>The Solution Blueprint: A Pure Generative Action Approach</h5><p>This is the quintessential Tier 1 use case, a perfect task for an intelligent, transactional assistant. A customer's query is direct, conversational, and highly variable. The core task is for the AI to understand this intent and extract one piece of data: the OrderNumber. A scripted Topic would be brittle and inefficient.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Prepare Your Foundation (API Access):</strong> You need secure, read-only API access to your Order Management System (OMS) and your primary shipping carriers (e.g., DHL, DPD).</li><li><strong>Build the Query Engine (The Power Automate Plugin):</strong> In Power Automate, create a new flow triggered by \"Run from Copilot.\" <ul ><li><strong>Plugin Name:</strong> Get Order Status and Tracking</li><li><strong>Description for AI:</strong> \"Gets the real-time shipping status and a tracking link for a customer's order. It requires the order number.\"</li><li><strong>Inputs:</strong> Define a single text input: OrderNumber.</li><li><strong>Flow Logic:</strong> Call your OMS API with the OrderNumber. Parse the response to get the Status and TrackingNumber. Format a clear text string and return it to the Copilot.</li></ul></li><li><strong>Enable the Plugin in Copilot Studio:</strong> Simply navigate to the Plugins section in your customer-facing Copilot, find your new plugin, and switch it on.</li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Eliminate the query before it's even asked with proactive notifications. Create a separate Scheduled Power Automate flow that runs every few hours. This flow should get a list of all orders that are currently \"in-transit.\" For each one, it calls the carrier's API. If the tracking status has changed, the flow automatically sends an email or SMS update to the customer.</p>"
        },
        {
            "id": 23,
            "title": "The Frictionless Return: Building Loyalty by Automating RMAs",
            "industry": "Retail & Consumer Packaged Goods",
            "technology": "Copilot Studio & Power Automate",
            "miniDescription": "Turn a frustrating returns process into a loyalty-building experience with a guided, automated RMA system.",
            "technicalLevel": 7,
            "problem": "A customer, Sarah, bought a shirt online, but it's the wrong size. She visits the retailer's website and has to hunt for the returns policy page. She then has to fill out a confusing web form, print a label, and find her own packaging. The entire process feels like a punishment for making a return. Frustrated, she vows never to shop there again.",
            "value": "In e-commerce, a customer's return experience is just as important as their purchase experience. A clunky, difficult returns process can sour a relationship forever, while a smooth, effortless one can turn a dissatisfied customer into a loyal advocate. For retailers, however, returns are a logistical and financial headache. This guide will show you how to build an automated returns system that provides a best-in-class customer experience while streamlining your reverse logistics operations.",
            "roi": "The return is measured in customer loyalty, operational efficiency, and reduced service contacts.\nA = Reduction in customer service contacts related to returns.\nB = Increase in customer lifetime value (LTV) due to improved customer satisfaction (NPS).\nC = Time saved by warehouse staff on manual returns processing.\n\n<code>Formula:\nValue Proposition = (Contact Savings, A) + (Increased LTV, B) + (Operational Savings, C)</code>\n\nExample: A frictionless returns process is a key driver of repeat purchases. Industry studies show that over 90% of customers will shop again with a retailer that offers an easy returns process. This increase in loyalty (B) is the single biggest financial driver, far outweighing the direct cost savings from call deflection.",
            "implementationGuide": "<h5>The Solution Blueprint: A Hybrid Approach</h5><p>The returns process requires a structured, policy-driven intake followed by a series of backend actions, making it a perfect Tier 2 candidate. A return request must be validated against business rules. A guided <strong>Topic</strong> is the best way to walk the customer through this validation process. The subsequent actions—generating a shipping label, updating the order system, and notifying the warehouse—are a complex orchestration best handled by a robust <strong>Power Automate plugin</strong>.</p><h5>Step-by-Step Implementation Guide</h5><ol><li><strong>Prepare Your Foundation (Policy Logic & Carrier API):</strong> Your Order Management System must contain the business rules for returns. You also need API access to your preferred shipping carrier to generate labels programmatically.</li><li><strong>Build the Guided Conversation (The Topic):</strong> In Copilot Studio, create the customer-facing Topic \"Start or Manage a Return.\" Ask for the order number, then display the items from that order as selectable buttons.</li><li><strong>Create the Orchestration Engine (The Power Automate Plugin):</strong> Create a flow triggered by \"Run from Copilot\" and configure it as a plugin named \"Process Customer Return Request.\" <ul ><li><strong>Flow Logic:</strong> Call your OMS API to validate if the item is eligible for return. If so, call the carrier's API to generate a shipping label. Update the order status in the OMS. Return the label to the user via the Copilot.</li></ul></li></ol><h5>Beyond the Basics (Pro-Tip)</h5><p>Automate the refund process. Create a separate Power Automate flow that is triggered when a package arrives at your warehouse and the return label is scanned. This \"label scanned\" event can be sent from your warehouse management system (WMS) via a webhook. The flow then automatically triggers the refund to the customer's original payment method and sends them a final \"Your return is complete\" notification.</p>"
        }
    ]
}
